{"version":3,"sources":["api.ts","types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","TodoList","todos","selectedTodoId","onTodoSelected","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","status","onStatusChange","query","onQueryChange","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","TodoModal","close","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","loading","setLoading","setQuery","setStatus","selectedTodo","setSelectedTodo","catch","error","console","warn","finally","visibleTodos","useMemo","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9da61cf.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId?: number,\n  onTodoSelected: (todo: Todo) => void,\n\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onTodoSelected,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              {todo.completed ? (\n                <p className=\"has-text-success\">{todo.title}</p>\n              ) : (\n                <p className=\"has-text-danger\">{todo.title}</p>\n              )}\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelected(todo)}\n              >\n                <span className=\"icon\">\n                  {selectedTodoId === todo.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Status } from '../../types/Status';\n\ntype Props = {\n  status: Status,\n  onStatusChange: (status: Status) => void,\n  query: string,\n  onQueryChange: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  status,\n  onStatusChange,\n  query,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={event => onStatusChange(event.target.value as Status)}\n        >\n          <option value={Status.all}>All</option>\n          <option value={Status.active}>Active</option>\n          <option value={Status.completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  close: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  close,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState(Status.all);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.warn(error);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos\n      .filter(todo => {\n        switch (status) {\n          case Status.completed:\n            return todo.completed;\n\n          case Status.active:\n            return !todo.completed;\n\n          default:\n            return true;\n        }\n      })\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }, [todos, query, status]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                status={status}\n                onStatusChange={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodo?.id}\n                  onTodoSelected={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          close={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}